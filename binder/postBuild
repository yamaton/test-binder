#!/bin/bash

# https://repo2docker.readthedocs.io/en/latest/config_files.html#postbuild-run-code-after-installing-the-environment
# > Note that by default the build will not be stopped
# > if an error occurs inside a shell script. You should
# > include set -e or the equivalent at the start of the
# > script to avoid errors being silently ignored.
set -o errexit
set -o nounset


# ffsend
curl https://raw.githubusercontent.com/yamaton/dotfiles/dev/_setup-ffsend.sh | bash -s -- -f


# myextension
ffsend download 'https://send.vis.ee/download/a96a794633ff3b2d/#lThUJGike-jiZ4GXrSFesA'
python -m pip install -U --prefix /srv/conda/envs/notebook myextension-0.1.0-py3-none-any.whl
rm -f myextension-0.1.0-py3-none-any.whl


# enable forked bash_kernel
python -m pip install -U --prefix /srv/conda/envs/notebook git+https://github.com/yamaton/bash_kernel@add-bash-completion


# pipx: install programs in each virtual environment
export PIPX_HOME=/srv/conda/pipx
mkdir -p "$PIPX_HOME"
TOOLS=( "$(cat ~/binder/_tools_pipx.txt)" )
for _tool in ${TOOLS[*]}; do
    echo "Installing ${_tool}"
    # retry if nonzero exit status occurs
    if [[ ! ($(pipx install "$_tool")) ]]; then
        echo "pipx retrying... $_tool"
        pipx uninstall "$_tool"
        pipx install "$_tool"
    fi
done


# Tweak exit code of the condax runner scripts
export CONDAX_HIDE_EXITCODE=1
# condax: install programs in each conda environment
mkdir -p /srv/conda/condax/envs
mkdir -p ~/.config/condax
echo "use_lockfiles: false" > ~/.mambarc
echo "prefix_dir: /srv/conda/condax/envs" > ~/.config/condax/config.yaml

TOOLS=( "$(cat ~/binder/_tools_condax.txt)" )
for _tool in ${TOOLS[*]}; do
    echo "Installing ${_tool}"
    # retry if nonzero exit status occurs
    if [[ ! ($(condax install -c conda-forge -c bioconda --force "$_tool")) ]]; then
        echo "condax retrying... $_tool"
        condax remove "$_tool"
        condax install -c conda-forge -c bioconda --force "$_tool"
    fi
    mamba clean --all --yes --force-pkgs-dirs
done


## zsh setup
## (subshelling does not seem to work in postBuild)
zshdir=~/.config/zsh
mkdir -p "$zshdir"
pushd "$zshdir"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting
    git clone https://github.com/zsh-users/zsh-autosuggestions
    git clone https://github.com/zsh-git-prompt/zsh-git-prompt
    git clone https://github.com/yamaton/zsh-completions-bio
popd


## remove .git in home directory
rm -rf .git
rm -f LICENSE README.md


## Install jupyterlab-shell-script-file
jupyter labextension install 'https://github.com/yamaton/jupyterlab-shell-script-file'


# Modify detail width of completion items
basedir="/srv/conda/envs/notebook/share/jupyter"
targets=(
    "${basedir}/lab/themes/@jupyterlab/theme-dark-extension/index.css"
    "${basedir}/lab/themes/@jupyterlab/theme-light-extension/index.css"
    "${basedir}/lab/themes/jupyterlab-tailwind-theme/index.css"
    "${basedir}/labextensions/@telamonian/theme-darcula/themes/@telamonian/theme-darcula/index.css"
)
for target in "${targets[@]}"; do
    if [[ -f $target ]]; then
        cat "binder/modify-theme.css" >> "$target"
    fi
done


# List extensions
jupyter serverextension list
jupyter server extension list
jupyter labextension list
jupyter lab extension list


## Change default settings for JupyterLab Extensions
mkdir -p "$NB_PYTHON_PREFIX"/share/jupyter/lab/settings/
cp binder/overrides.json "$NB_PYTHON_PREFIX"/share/jupyter/lab/settings/


# Save user-installed R packages in user directory
## https://stackoverflow.com/a/45228058
mkdir -p ~/.local/lib/R/library
cat <<EOF >> ~/.Renviron
R_LIBS_USER=$HOME/.local/lib/R/library/
EOF


## Fix RStudio failing to load conda-managed shared libraries
## https://github.com/binder-examples/r-conda/issues/5#issuecomment-967446847
## ... and libattr.so* seems harm than good
ln -sf "$NB_PYTHON_PREFIX"/lib/*.so* "$NB_PYTHON_PREFIX"/lib/R/lib
rm -f "$NB_PYTHON_PREFIX"/lib/R/lib/libattr.so*


## [NOTE] Place this AFTER conda packages setups.
##
## Change conda envs directories and pkgs directories s.t.
## users can keep user-installed conda packages persistently.
mkdir -p ~/.local/share/conda/envs
mkdir -p ~/.local/share/conda/pkgs
cat << 'EOF' >> ~/.condarc
channels:
  - conda-forge
  - bioconda

envs_dirs:
  - ~/.local/share/conda/envs
  - /srv/conda/envs

pkgs_dirs:
  - ~/.local/share/conda/pkgs
  - /srv/conda/pkgs

EOF


## Remove cache
##
## otherwise the size $HOME gets too large that
## docker volume initialization triggers a timeout
## at the very first startup of an environment
rm -rf ~/.cache
rm -rf ~/.npm
rm -rf ~/.yarn
