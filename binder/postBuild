#!/bin/bash

# https://repo2docker.readthedocs.io/en/latest/config_files.html#postbuild-run-code-after-installing-the-environment
# > Note that by default the build will not be stopped
# > if an error occurs inside a shell script. You should
# > include set -e or the equivalent at the start of the
# > script to avoid errors being silently ignored.
set -o errexit
set -o nounset


# enable forked bash_kernel
python -m pip install -U --prefix /srv/conda/envs/notebook git+https://github.com/yamaton/bash_kernel@add-bash-completion


# install triton-lsp
# This path must be consistent with what's written in
# .jupyter/jupyter_server_config.json
mkdir -p /srv/conda/envs/notebook/etc/jupyter
npm install --prefix /srv/conda/envs/notebook/etc/jupyter yamaton/triton-lsp#dev


# install custom jupyterlab-lsp
pushd /srv/conda/envs/notebook
    wget https://github.com/yamaton/jupyterlab-lsp/archive/refs/heads/dev.zip
    unzip dev.zip
    rm -f dev.zip
    pushd jupyterlab-lsp-dev
        # Build labextensions
        jlpm bootstrap

        # Do a dev install of the server side
        pushd python_packages/jupyter_lsp
            python setup.py sdist bdist_wheel
            python -m pip install -e . --ignore-installed --no-deps -vv
            jupyter serverextension enable --sys-prefix --py jupyter_lsp
        popd

        # Install the labextension
        pushd python_packages/jupyterlab_lsp
            python setup.py sdist bdist_wheel
            python -m pip install -e . --ignore-installed --no-deps -vv
            jupyter labextension develop . --overwrite
        popd
    popd
popd


# Jupyterlab themes
jupyter labextension install jupyterlab-tailwind-theme


# Modify detail width of completion items
cat "binder/modify-theme.css" >> "/srv/conda/envs/notebook/share/jupyter/lab/themes/@jupyterlab/theme-dark-extension/index.css"
cat "binder/modify-theme.css" >> "/srv/conda/envs/notebook/share/jupyter/lab/themes/@jupyterlab/theme-light-extension/index.css"


# pipx: install programs in each virtual environment
export PIPX_HOME=/srv/conda/pipx
mkdir -p "$PIPX_HOME"
TOOLS=( "$(cat ~/binder/_tools_pipx.txt)" )
for _tool in ${TOOLS[*]}; do
    echo "Installing ${_tool}"
    # retry if nonzero exit status occurs
    if [[ ! ($(pipx install "$_tool")) ]]; then
        echo "pipx retrying... $_tool"
        pipx uninstall "$_tool"
        pipx install "$_tool"
    fi
done


# Tweak exit code of the condax runner scripts
export CONDAX_HIDE_EXITCODE=1


# condax: install programs in each conda environment
mkdir -p /srv/conda/condax/envs
mkdir -p ~/.config/condax
echo "prefix_dir: /srv/conda/condax/envs" > ~/.config/condax/config.yaml

TOOLS=( "$(cat ~/binder/_tools_condax.txt)" )
for _tool in ${TOOLS[*]}; do
    echo "Installing ${_tool}"
    # retry if nonzero exit status occurs
    if [[ ! ($(condax install -c conda-forge -c bioconda --force "$_tool")) ]]; then
        echo "condax retrying... $_tool"
        condax remove "$_tool"
        condax install -c conda-forge -c bioconda --force "$_tool"
    fi
    mamba clean --all --yes --force-pkgs-dirs
done


## qiime2 (q2cli)
wget https://data.qiime2.org/distro/core/qiime2-2022.11-py38-linux-conda.yml -O qiime2.yml
condax install -c conda-forge -c bioconda --force --file qiime2.yml q2cli
rm -f qiime2.yml
mamba clean --all --yes --force-pkgs-dirs


## zsh setup
## (subshelling does not seem to work in postBuild)
zshdir=~/.config/zsh
mkdir -p "$zshdir"
pushd "$zshdir"
    git clone https://github.com/zsh-users/zsh-syntax-highlighting
    git clone https://github.com/zsh-users/zsh-autosuggestions
    git clone https://github.com/zsh-git-prompt/zsh-git-prompt
    git clone https://github.com/yamaton/zsh-completions-bio
popd


## remove .git in home directory
rm -rf .git
rm -f LICENSE README.md


## Install tealdeer
curl https://raw.githubusercontent.com/yamaton/dotfiles/master/_setup-tealdeer.sh | bash -s -- -f


## Fix 404 Error with nbgitpuller link
## https://jupyterhub.github.io/nbgitpuller/install.html#nbgitpuller-link-shows-404-not-found
jupyter serverextension enable nbgitpuller --sys-prefix


## Install jupyterlab-shell-script-file
jupyter labextension install 'https://github.com/yamaton/jupyterlab-shell-script-file'


# List extensions
jupyter serverextension list
jupyter server extension list
jupyter labextension list
jupyter lab extension list


## Change default settings for JupyterLab Extensions
mkdir -p "$NB_PYTHON_PREFIX"/share/jupyter/lab/settings/
cp binder/overrides.json "$NB_PYTHON_PREFIX"/share/jupyter/lab/settings/


## Remove cache
##
## otherwise the size $HOME gets too large that
## docker volume initialization triggers a timeout
## at the very first startup of an environment
rm -rf ~/.cache
rm -rf ~/.npm
rm -rf ~/.yarn
