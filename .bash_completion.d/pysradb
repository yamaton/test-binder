# Auto-generated with h2o

_pysradb()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          metadata) _pysradb_metadata
            return
            ;;

          download) _pysradb_download
            return
            ;;

          search) _pysradb_search
            return
            ;;

          gse-to-gsm) _pysradb_gsetogsm
            return
            ;;

          gse-to-srp) _pysradb_gsetosrp
            return
            ;;

          gsm-to-gse) _pysradb_gsmtogse
            return
            ;;

          gsm-to-srp) _pysradb_gsmtosrp
            return
            ;;

          gsm-to-srr) _pysradb_gsmtosrr
            return
            ;;

          gsm-to-srs) _pysradb_gsmtosrs
            return
            ;;

          gsm-to-srx) _pysradb_gsmtosrx
            return
            ;;

          srp-to-gse) _pysradb_srptogse
            return
            ;;

          srp-to-srr) _pysradb_srptosrr
            return
            ;;

          srp-to-srs) _pysradb_srptosrs
            return
            ;;

          srp-to-srx) _pysradb_srptosrx
            return
            ;;

          srr-to-gsm) _pysradb_srrtogsm
            return
            ;;

          srr-to-srp) _pysradb_srrtosrp
            return
            ;;

          srr-to-srs) _pysradb_srrtosrs
            return
            ;;

          srr-to-srx) _pysradb_srrtosrx
            return
            ;;

          srs-to-gsm) _pysradb_srstogsm
            return
            ;;

          srs-to-srx) _pysradb_srstosrx
            return
            ;;

          srx-to-srp) _pysradb_srxtosrp
            return
            ;;

          srx-to-srr) _pysradb_srxtosrr
            return
            ;;

          srx-to-srs) _pysradb_srxtosrs
            return
            ;;

      *)
          word_list=" metadata download search gse-to-gsm gse-to-srp gsm-to-gse gsm-to-srp gsm-to-srr gsm-to-srs gsm-to-srx srp-to-gse srp-to-srr srp-to-srs srp-to-srx srr-to-gsm srr-to-srp srr-to-srs srr-to-srx srs-to-gsm srs-to-srx srx-to-srp srx-to-srr srx-to-srs -h --help --version --citation"
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_pysradb_metadata ()
{
    local cur word_list
    word_list=" -h --help --saveto --assay --desc --detailed --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_download ()
{
    local cur word_list
    word_list=" -h --help --out-dir --srx - --srp - --geo - --skip-confirmation -y --use_ascp -a --col --threads -t" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_search ()
{
    local cur word_list
    word_list=" -h --help -o --saveto -s --stats -g --graphs -d --db -v --verbosity --run-description --detailed -m --max -q --query -A --accession -O --organism -L --layout -M --mbases -D --publication-date -P --platform -E --selection -C --source -S --strategy -T --title -I --geo-info -G --geo-query -Y --geo-dataset-type -Z --geo-entry-type" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsetogsm ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsetosrp ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsmtogse ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsmtosrp ()
{
    local cur word_list
    word_list=" -h --help --desc --detailed --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsmtosrr ()
{
    local cur word_list
    word_list=" -h --help --desc --detailed --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsmtosrs ()
{
    local cur word_list
    word_list=" -h --help --desc --detailed --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_gsmtosrx ()
{
    local cur word_list
    word_list=" -h --help --desc --detailed --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srptogse ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srptosrr ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srptosrs ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srptosrx ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srrtogsm ()
{
    local cur word_list
    word_list=" -h --help --detailed --desc --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srrtosrp ()
{
    local cur word_list
    word_list=" -h --help --detailed --desc --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srrtosrs ()
{
    local cur word_list
    word_list=" -h --help --detailed --desc --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srrtosrx ()
{
    local cur word_list
    word_list=" -h --help --detailed --desc --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srstogsm ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srstosrx ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srxtosrp ()
{
    local cur word_list
    word_list=" -h --help --desc --detailed --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srxtosrr ()
{
    local cur word_list
    word_list=" -h --help --desc --detailed --expand --saveto" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_pysradb_srxtosrs ()
{
    local cur word_list
    word_list=" -h --help --saveto --detailed --desc --expand" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _pysradb pysradb
