# Auto-generated with h2o

_seqfu()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          count) _seqfu_count
            return
            ;;

          deinterleave) _seqfu_deinterleave
            return
            ;;

          derep) _seqfu_derep
            return
            ;;

          interleave) _seqfu_interleave
            return
            ;;

          lanes) _seqfu_lanes
            return
            ;;

          list) _seqfu_list
            return
            ;;

          metadata) _seqfu_metadata
            return
            ;;

          rotate) _seqfu_rotate
            return
            ;;

          sort) _seqfu_sort
            return
            ;;

          stats) _seqfu_stats
            return
            ;;

          cat) _seqfu_cat
            return
            ;;

          grep) _seqfu_grep
            return
            ;;

          head) _seqfu_head
            return
            ;;

          rc) _seqfu_rc
            return
            ;;

          tab) _seqfu_tab
            return
            ;;

          tail) _seqfu_tail
            return
            ;;

          view) _seqfu_view
            return
            ;;

      *)
          word_list=" count deinterleave derep interleave lanes list metadata rotate sort stats cat grep head rc tab tail view "
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_seqfu_count ()
{
    local cur word_list
    word_list=" -a --abs-path -b --basename -u --unpair -f --for-tag -r --rev-tag -t --threads -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_deinterleave ()
{
    local cur word_list
    word_list=" -o --output-basename -f --for-ext -r --rev-ext -c --check -v --verbose -s --strip-comments -p --prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_derep ()
{
    local cur word_list
    word_list=" -k --keep-name -i --ignore-size -m --min-size -p --prefix -5 --md5 -j --json -s --separator -w --line-width -l --min-length -x --max-length -c --size-as-comment --add-len -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_interleave ()
{
    local cur word_list
    word_list=" -f --for-tag -r --rev-tag -o --output -c --check -v --verbose -s --strip-comments -p --prefix" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_lanes ()
{
    local cur word_list
    word_list=" -o --outdir -e --extension -s --file-separator --comment-separator -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_list ()
{
    local cur word_list
    word_list=" -c --with-comments -p --partial-match -m --min-len -v --verbose -r --report --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_metadata ()
{
    local cur word_list
    word_list=" -1 --for-tag -2 --rev-tag -s --split --pos -f --format --pe -p --add-path -c --counts -t --threads -P --project --meta-split --meta-part --meta-default -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_rotate ()
{
    local cur word_list
    word_list=" -i --start-pos -m --motif -s --skip-unmached -r --revcomp -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_sort ()
{
    local cur word_list
    word_list=" -p --prefix -s --strip-comments --asc -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_stats ()
{
    local cur word_list
    word_list=" -a --abs-path -b --basename -n --nice -j --json -s --sort-by -r --reverse -t --thousands --csv --gc --multiqc --precision -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_cat ()
{
    local cur word_list
    word_list=" -k --skip -p --prefix -z --strip-name -a --append --sep -b --basename --split --part --basename-sep -s --strip-comments --comment-sep --add-len --add-initial-len --add-gc --add-initial-gc --add-name --add-ee --add-initial-ee -n --max-ns -m --min-len -x --max-len --max-ee --trim-front --trim-tail --truncate --fasta --fastq --list -q --fastq-qual -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_grep ()
{
    local cur word_list
    word_list=" -n --name -r --regex -c --comment -f --full -w --word -i --ignore-case -o --oligo -A --append-pos --max-mismatches --min-matches -v --verbose --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_head ()
{
    local cur word_list
    word_list=" -n --num -k --skip -p --prefix -s --strip-comments -b --basename -v --verbose --quiet --help --fasta --fastq --sep -q --fastq-qual" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_rc ()
{
    local cur word_list
    word_list=" -s --seq-name -r --only-rev --strip-comments -v --verbose --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_tab ()
{
    local cur word_list
    word_list=" -i --interleaved -d --detabulate -c --comment-sep -s --field-sep -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_tail ()
{
    local cur word_list
    word_list=" -n --num -k --skip -p --prefix -s --strip-comments -b --basename --fasta --fastq --sep -v --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

_seqfu_view ()
{
    local cur word_list
    word_list=" -o --oligo1 -r --oligo2 -q --qual-scale --match-ths --min-matches --max-mismatches --ascii -Q --qual-chars -n --nocolor --verbose -h --help" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _seqfu seqfu
