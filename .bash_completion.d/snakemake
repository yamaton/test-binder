# Auto-generated with h2o

_snakemake()
{
    local i=1 cmd cur word_list
    cur="${COMP_WORDS[COMP_CWORD]}"

    # take the last word that's NOT starting with -
    while [[ ( "$i" < "$COMP_CWORD" ) ]]; do
        local s="${COMP_WORDS[i]}"
        case "$s" in
          -*) ;;
          *)
            cmd="$s"
            ;;
        esac
        (( i++ ))
    done

    case "$cmd" in
          target) _snakemake_target
            return
            ;;

      *)
          word_list=" target -h --help --dry-run --dryrun -n --profile --cache --snakefile -s --cores -c --jobs -j --local-cores --resources --set-threads --max-threads --set-resources --set-scatter --default-resources --preemption-default --preemptible-rules --config -C --configfile --configfiles --envvars --directory -d --touch -t --keep-going -k --force -f --forceall -F --forcerun -R --prioritize -P --batch --until -U --omit-from -O --rerun-incomplete --ri --shadow-prefix --scheduler --wms-monitor --wms-monitor-arg --scheduler-ilp-solver --scheduler-solver-path --conda-base-path --no-subworkflows --nosw --groups --group-components --report --report-stylesheet --draft-notebook --edit-notebook --notebook-listen --lint --generate-unit-tests --containerize --export-cwl --list -l --list-target-rules --lt --dag --rulegraph --filegraph --d3dag --summary -S --detailed-summary -D --archive --cleanup-metadata --cm --cleanup-shadow --skip-script-cleanup --unlock --list-version-changes --lv --list-code-changes --lc --list-input-changes --li --list-params-changes --lp --list-untracked --lu --delete-all-output --delete-temp-output --bash-completion --keep-incomplete --drop-metadata --version -v --reason -r --gui --printshellcmds -p --debug-dag --stats --nocolor --quiet -q --print-compilation --verbose --force-use-threads --allow-ambiguity -a --nolock --ignore-incomplete --ii --max-inventory-time --latency-wait --output-wait -w --wait-for-files --wait-for-files-file --notemp --nt --all-temp --keep-remote --keep-target-files --allowed-rules --max-jobs-per-second --max-status-checks-per-second -T --restart-times --attempt --wrapper-prefix --default-remote-provider --default-remote-prefix --no-shared-fs --greediness --no-hooks --overwrite-shellcmd --debug --runtime-profile --mode --show-failed-logs --log-handler-script --log-service --cluster --cluster-sync --drmaa --cluster-config -u --immediate-submit --is --jobscript --js --jobname --jn --cluster-status --drmaa-log-dir --kubernetes --container-image --tibanna --tibanna-sfn --precommand --tibanna-config --google-lifesciences --google-lifesciences-regions --google-lifesciences-location --google-lifesciences-keep-cache --tes --use-conda --conda-not-block-search-path-envvars --list-conda-envs --conda-prefix --conda-cleanup-envs --conda-cleanup-pkgs --conda-create-envs-only --conda-frontend --use-singularity --singularity-prefix --singularity-args --use-envmodules" 
          COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
          ;;
    esac

}

_snakemake_target ()
{
    local cur word_list
    word_list=" -h --help --dry-run --dryrun -n --profile --cache --snakefile -s --cores -c --jobs -j --local-cores --resources --set-threads --max-threads --set-resources --set-scatter --default-resources --preemption-default --preemptible-rules --config -C --configfile --configfiles --envvars --directory -d --touch -t --keep-going -k --force -f --forceall -F --forcerun -R --prioritize -P --batch --until -U --omit-from -O --rerun-incomplete --ri --shadow-prefix --scheduler --wms-monitor --wms-monitor-arg --scheduler-ilp-solver --scheduler-solver-path --conda-base-path --no-subworkflows --nosw --groups --group-components --report --report-stylesheet --draft-notebook --edit-notebook --notebook-listen --lint --generate-unit-tests --containerize --export-cwl --list -l --list-target-rules --lt --dag --rulegraph --filegraph --d3dag --summary -S --detailed-summary -D --archive --cleanup-metadata --cm --cleanup-shadow --skip-script-cleanup --unlock --list-version-changes --lv --list-code-changes --lc --list-input-changes --li --list-params-changes --lp --list-untracked --lu --delete-all-output --delete-temp-output --bash-completion --keep-incomplete --drop-metadata --version -v --reason -r --gui --printshellcmds -p --debug-dag --stats --nocolor --quiet -q --print-compilation --verbose --force-use-threads --allow-ambiguity -a --nolock --ignore-incomplete --ii --max-inventory-time --latency-wait --output-wait -w --wait-for-files --wait-for-files-file --notemp --nt --all-temp --keep-remote --keep-target-files --allowed-rules --max-jobs-per-second --max-status-checks-per-second -T --restart-times --attempt --wrapper-prefix --default-remote-provider --default-remote-prefix --no-shared-fs --greediness --no-hooks --overwrite-shellcmd --debug --runtime-profile --mode --show-failed-logs --log-handler-script --log-service --cluster --cluster-sync --drmaa --cluster-config -u --immediate-submit --is --jobscript --js --jobname --jn --cluster-status --drmaa-log-dir --kubernetes --container-image --tibanna --tibanna-sfn --precommand --tibanna-config --google-lifesciences --google-lifesciences-regions --google-lifesciences-location --google-lifesciences-keep-cache --tes --use-conda --conda-not-block-search-path-envvars --list-conda-envs --conda-prefix --conda-cleanup-envs --conda-cleanup-pkgs --conda-create-envs-only --conda-frontend --use-singularity --singularity-prefix --singularity-args --use-envmodules" 
    cur="${COMP_WORDS[COMP_CWORD]}"
    COMPREPLY=( $(compgen -W "${word_list}" -- "${cur}") )
}

## -o bashdefault and -o default are fallback
complete -o bashdefault -o default -F _snakemake snakemake
